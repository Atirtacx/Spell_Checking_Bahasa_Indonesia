{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyNwtKXIMX77bUAD11dCiVRu",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    },
    "gpuClass": "standard"
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Atirtacx/Spell_Checking_Bahasa_Indonesia/blob/main/Spell_checking_Indonesia_language_method_using_Peter_Norvig_%26_Lavenshtein_Distance\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import time\n",
        "\n",
        "# Load dictionary for Levenshtein Distance Spell Checker\n",
        "dictionary = []\n",
        "with open(\"kata-dasar.txt\", \"r\", encoding=\"utf-8\") as f:\n",
        "    for line in f:\n",
        "        dictionary.append(line.strip())\n",
        "\n",
        "# Define Levenshtein Distance function\n",
        "def levenshtein_distance(word1, word2):\n",
        "    m = len(word1)\n",
        "    n = len(word2)\n",
        "    dp = [[0] * (n + 1) for _ in range(m + 1)]\n",
        "    for i in range(m + 1):\n",
        "        dp[i][0] = i\n",
        "    for j in range(n + 1):\n",
        "        dp[0][j] = j\n",
        "    for i in range(1, m + 1):\n",
        "        for j in range(1, n + 1):\n",
        "            if word1[i - 1] == word2[j - 1]:\n",
        "                dp[i][j] = dp[i - 1][j - 1]\n",
        "            else:\n",
        "                dp[i][j] = 1 + min(dp[i - 1][j], dp[i][j - 1], dp[i - 1][j - 1])\n",
        "    return dp[m][n]\n",
        "\n",
        "# Define Levenshtein Distance Spell Checker function\n",
        "def levenshtein_spell_checker(word):\n",
        "    min_distance = float('inf')\n",
        "    corrected_word = word\n",
        "    for w in dictionary:\n",
        "        distance = levenshtein_distance(word, w)\n",
        "        if distance < min_distance:\n",
        "            min_distance = distance\n",
        "            corrected_word = w\n",
        "    return corrected_word\n",
        "\n",
        "# Define Peter Norvig Spell Checker function\n",
        "def norvig_spell_checker(word):\n",
        "    dictionary_frequency = load_dictionary('kata-dasar.txt')\n",
        "    alphabet = 'abcdefghijklmnopqrstuvwxyz'\n",
        "    def edit_distance_1(word):\n",
        "        splits     = [(word[:i], word[i:]) for i in range(len(word) + 1)]\n",
        "        deletes    = [a + b[1:] for a, b in splits if b]\n",
        "        transposes = [a + b[1] + b[0] + b[2:] for a, b in splits if len(b) > 1]\n",
        "        replaces   = [a + c + b[1:] for a, b in splits for c in alphabet if b]\n",
        "        inserts    = [a + c + b     for a, b in splits for c in alphabet]\n",
        "        return set(deletes + transposes + replaces + inserts)\n",
        "\n",
        "    def edit_distance_2(word):\n",
        "        return (e2 for e1 in edit_distance_1(word) for e2 in edit_distance_1(e1))\n",
        "\n",
        "    def known_words(words):\n",
        "        return set(w for w in words if w in dictionary_frequency)\n",
        "\n",
        "    def word_probability(word):\n",
        "        return dictionary_frequency[word]\n",
        "\n",
        "    suggestions = []\n",
        "    # Get suggestions based on edit distance of 1\n",
        "    edit_dist_1 = edit_distance_1(word)\n",
        "    suggestions += known_words(edit_dist_1)\n",
        "    # Get suggestions based on edit distance of 2\n",
        "    edit_dist_2 = edit_distance_2(word)\n",
        "    suggestions += known_words(edit_dist_2)\n",
        "    if suggestions:\n",
        "        return max(suggestions, key=word_probability)\n",
        "    else:\n",
        "        return word\n",
        "\n",
        "# Define Combined Spell Checker function\n",
        "def combined_spell_checker(word):\n",
        "    norvig_corrected_word = norvig_spell_checker(word)\n",
        "    if norvig_corrected_word == word:\n",
        "        return levenshtein_spell_checker(word)\n",
        "    else:\n",
        "        return norvig_corrected_word\n",
        "\n",
        "sentences = [    \"saya ingin membeli bku\",    \n",
        "             \"kami sedang belajar bahasa pinisil\",    \n",
        "             \"tolong dapaatkan buku teresebut\",    \n",
        "             \"buku nya bgaus\",    \n",
        "             \"teman saya sdang sakit\",    \n",
        "             \"hari ini saya akn pulang larut\",    \n",
        "             \"apkah kamu tahu dmana saya bisa membeli baju ini\",    \n",
        "             \"sya sduah mnum obat\",    \n",
        "             \"di mna kunci nya?\",   \n",
        "             \"kucing saya lari kmarin\",    \n",
        "             \"saya ingin membeli laptop bagus dengan hrga terjangkau\",    \n",
        "             \"apkah kamu bisa membantu sya?\",    \n",
        "             \"tlpnonnya sblmnya tlah sya hpus\",    \n",
        "             \"saya ingin membeli hp baru\",    \n",
        "             \"tolong krmkan buku itu ke alamat saya\",   \n",
        "             \"saya akan berangkat ke bandara jam 8 pagi\",    \n",
        "             \"tolong antar saya ke alamat ini\",    \n",
        "             \"sya tdk bisa dtng hr ini\",    \n",
        "             \"maaf saya trlambat\",    \n",
        "             \"kemana kamu akan prgi mlm ini?\"]\n",
        "\n",
        "norvig_runtime = 0\n",
        "levenshtein_runtime = 0\n",
        "combined_runtime = 0\n",
        "\n",
        "for sentence in sentences:\n",
        "    start = time.time()\n",
        "    norvig_corrected_sentence = ' '.join([norvig_spell_checker(word) for word in sentence.split()])\n",
        "    end = time.time()\n",
        "    norvig_runtime += (end - start)\n",
        "    \n",
        "    start = time.time()\n",
        "    levenshtein_corrected_sentence = ' '.join([levenshtein_spell_checker(word) for word in sentence.split()])\n",
        "    end = time.time()\n",
        "    levenshtein_runtime += (end - start)\n",
        "    \n",
        "    start = time.time()\n",
        "    combined_corrected_sentence = ' '.join([combined_spell_checker(word) for word in sentence.split()])\n",
        "    end = time.time()\n",
        "    combined_runtime += (end - start)\n",
        "\n",
        "    print(\"Original sentence:\", sentence)\n",
        "    print(\"Norvig corrected sentence:\", norvig_corrected_sentence)\n",
        "    print(\"Levenshtein corrected sentence:\", levenshtein_corrected_sentence)\n",
        "    print(\"Combined corrected sentence:\", combined_corrected_sentence)\n",
        "    print(\"----------------------\")\n",
        "\n",
        "print(\"Norvig runtime:\", norvig_runtime)\n",
        "print(\"Levenshtein runtime:\", levenshtein_runtime)\n",
        "print(\"Combined runtime:\", combined_runtime)\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "5eyvyLPxMe13",
        "outputId": "59d1fbcf-ba71-4037-f07b-f94842f55a35"
      },
      "execution_count": 17,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Original sentence: saya ingin membeli bku\n",
            "Norvig corrected sentence: baya dingin sembelih buk\n",
            "Levenshtein corrected sentence: saya ingin embel aku\n",
            "Combined corrected sentence: baya dingin sembelih buk\n",
            "----------------------\n",
            "Original sentence: kami sedang belajar bahasa pinisil\n",
            "Norvig corrected sentence: kati sedeng belada bahara pinisi\n",
            "Levenshtein corrected sentence: kami sedang bajar bahasa pinisi\n",
            "Combined corrected sentence: kati sedeng belada bahara pinisi\n",
            "----------------------\n",
            "Original sentence: tolong dapaatkan buku teresebut\n",
            "Norvig corrected sentence: polong dapaatkan suku teresebut\n",
            "Levenshtein corrected sentence: tolong adakan buku terbut\n",
            "Combined corrected sentence: polong adakan suku terbut\n",
            "----------------------\n",
            "Original sentence: buku nya bgaus\n",
            "Norvig corrected sentence: suku nyak bagus\n",
            "Levenshtein corrected sentence: buku iya agas\n",
            "Combined corrected sentence: suku nyak bagus\n",
            "----------------------\n",
            "Original sentence: teman saya sdang sakit\n",
            "Norvig corrected sentence: teman baya dang sarit\n",
            "Levenshtein corrected sentence: teman saya adang sakit\n",
            "Combined corrected sentence: teman baya dang sarit\n",
            "----------------------\n",
            "Original sentence: hari ini saya akn pulang larut\n",
            "Norvig corrected sentence: qari uni baya akh julang larut\n",
            "Levenshtein corrected sentence: hari ini saya ain pulang larut\n",
            "Combined corrected sentence: qari uni baya akh julang larut\n",
            "----------------------\n",
            "Original sentence: apkah kamu tahu dmana saya bisa membeli baju ini\n",
            "Norvig corrected sentence: apakah tamu tamu dana baya wisa sembelih balu uni\n",
            "Levenshtein corrected sentence: alkah kamu tahu dana saya bisa embel baju ini\n",
            "Combined corrected sentence: apakah tamu tamu dana baya wisa sembelih balu uni\n",
            "----------------------\n",
            "Original sentence: sya sduah mnum obat\n",
            "Norvig corrected sentence: syam sudah minum hobat\n",
            "Levenshtein corrected sentence: isya suah minum obat\n",
            "Combined corrected sentence: syam sudah minum hobat\n",
            "----------------------\n",
            "Original sentence: di mna kunci nya?\n",
            "Norvig corrected sentence: adi mina gunci nyai\n",
            "Levenshtein corrected sentence: adi ana kunci nyai\n",
            "Combined corrected sentence: adi mina gunci nyai\n",
            "----------------------\n",
            "Original sentence: kucing saya lari kmarin\n",
            "Norvig corrected sentence: kuing baya qari kemarin\n",
            "Levenshtein corrected sentence: kucing saya lari kemarin\n",
            "Combined corrected sentence: kuing baya qari kemarin\n",
            "----------------------\n",
            "Original sentence: saya ingin membeli laptop bagus dengan hrga terjangkau\n",
            "Norvig corrected sentence: baya dingin sembelih laptop bagas dongan harga terjangkau\n",
            "Levenshtein corrected sentence: saya ingin embel laptop bagus dengan harga berangkal\n",
            "Combined corrected sentence: baya dingin sembelih laptop bagas dongan harga berangkal\n",
            "----------------------\n",
            "Original sentence: apkah kamu bisa membantu sya?\n",
            "Norvig corrected sentence: apakah tamu wisa menantu syam\n",
            "Levenshtein corrected sentence: alkah kamu bisa kembatu syah\n",
            "Combined corrected sentence: apakah tamu wisa menantu syam\n",
            "----------------------\n",
            "Original sentence: tlpnonnya sblmnya tlah sya hpus\n",
            "Norvig corrected sentence: tlpnonnya sblmnya talah syam opus\n",
            "Levenshtein corrected sentence: empunya blenda ilah isya hapus\n",
            "Combined corrected sentence: empunya blenda talah syam opus\n",
            "----------------------\n",
            "Original sentence: saya ingin membeli hp baru\n",
            "Norvig corrected sentence: baya dingin sembelih hap haru\n",
            "Levenshtein corrected sentence: saya ingin embel hap baru\n",
            "Combined corrected sentence: baya dingin sembelih hap haru\n",
            "----------------------\n",
            "Original sentence: tolong krmkan buku itu ke alamat saya\n",
            "Norvig corrected sentence: polong rekan suku jitu koe alamak baya\n",
            "Levenshtein corrected sentence: tolong arkan buku itu kek alamat saya\n",
            "Combined corrected sentence: polong rekan suku jitu koe alamak baya\n",
            "----------------------\n",
            "Original sentence: saya akan berangkat ke bandara jam 8 pagi\n",
            "Norvig corrected sentence: baya akar berangkat koe bandara jas mu pati\n",
            "Levenshtein corrected sentence: saya akan berangkat kek bandara jam es pagi\n",
            "Combined corrected sentence: baya akar berangkat koe bandara jas mu pati\n",
            "----------------------\n",
            "Original sentence: tolong antar saya ke alamat ini\n",
            "Norvig corrected sentence: polong natar baya koe alamak uni\n",
            "Levenshtein corrected sentence: tolong antar saya kek alamat ini\n",
            "Combined corrected sentence: polong natar baya koe alamak uni\n",
            "----------------------\n",
            "Original sentence: sya tdk bisa dtng hr ini\n",
            "Norvig corrected sentence: syam tuk wisa dong hart uni\n",
            "Levenshtein corrected sentence: isya tak bisa dang aho ini\n",
            "Combined corrected sentence: syam tuk wisa dong hart uni\n",
            "----------------------\n",
            "Original sentence: maaf saya trlambat\n",
            "Norvig corrected sentence: maaf baya tambat\n",
            "Levenshtein corrected sentence: maaf saya lambat\n",
            "Combined corrected sentence: maaf baya tambat\n",
            "----------------------\n",
            "Original sentence: kemana kamu akan prgi mlm ini?\n",
            "Norvig corrected sentence: kemala tamu akar prei mam ini\n",
            "Levenshtein corrected sentence: kelana kamu akan pagi mam ini\n",
            "Combined corrected sentence: kemala tamu akar prei mam ini\n",
            "----------------------\n",
            "Norvig runtime: 4.670118808746338\n",
            "Levenshtein runtime: 61.717527627944946\n",
            "Combined runtime: 14.178631782531738\n"
          ]
        }
      ]
    }
  ]
}